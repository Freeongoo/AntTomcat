<?xml version="1.0" encoding="UTF-8"?>

<project xmlns:ivy="antlib:org.apache.ivy.ant" name="ant_tomcat" default="all" basedir=".">

    <!-- ivy properties -->
    <property name="ivy.install.version" value="2.4.0" />
    <condition property="ivy.home" value="${env.IVY_HOME}">
        <isset property="env.IVY_HOME" />
    </condition>
    <property name="ivy.home" value="${user.home}/.ant" />
    <property name="ivy.jar.dir" value="${ivy.home}/lib" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

    <!-- dirs -->
    <property name="src" value="src"/>
    <property name="web" value="web"/>
    <property name="web.build.dir" value="${web}/WEB-INF"/>
    <property name="web.build.dir.classes" value="${web.build.dir}/classes"/>
    <property name="web.xml" value="${web.build.dir}/web.xml"/>
    <property name="web.src.dir" value="${src}/main/java"/>
    <property name="war.file" value="simple.war"/>
    <property name="lib" value="lib"/>

    <path id="classpath.test">
        <pathelement location="${lib}/junit-4.12.jar"/>
        <pathelement location="${lib}/hamcrest-core-1.3.jar"/>
        <pathelement location="${web.build.dir.classes}"/>
    </path>

    <path id="classpath.servlet">
        <pathelement location="${lib}/javax.servlet-api-3.0.1.jar"/>
        <pathelement location="${web.build.dir.classes}"/>
    </path>

    <target name="download-ivy" unless="offline">
        <mkdir dir="${ivy.jar.dir}" />
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true" />
    </target>

    <target name="init-ivy" depends="download-ivy">
        <!-- try to load ivy here from ivy home, in case the user has not already dropped
                  it into ant's lib dir (note that the latter copy will always take precedence).
                  We will not fail as long as local lib dir exists (it may be empty) and
                  ivy is in at least one of ant's lib dir or the local lib dir. -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar" />
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
    </target>

    <target name="resolve-test" depends="init-ivy">
        <!-- see conf "test" in ivy.xml -->
        <ivy:retrieve conf="test"
                      type="jar,bundle"
                      sync="true"
                      pattern="${lib}/[module]-[revision].[ext]"/>
    </target>

    <target name="resolve-compile" depends="init-ivy">
        <!-- see conf "compile" in ivy.xml -->
        <ivy:retrieve conf="compile"
                      type="jar,bundle"
                      sync="true"
                      pattern="${lib}/[module]-[revision].[ext]"/>
    </target>

    <target name="compile" depends="resolve-compile">
        <mkdir dir="${web.build.dir.classes}"/>
        <javac srcdir="${web.src.dir}" destdir="${web.build.dir.classes}" includeantruntime="false" >
            <classpath refid="classpath.servlet"/>
        </javac>
    </target>

    <target name="war" depends="compile">
        <war destfile="${war.file}" webxml="${web.xml}">
            <fileset dir="${web}">
                <include name="**/*.*"/>
                <exclude name="${web.xml}" />
            </fileset>
            <classes dir="${web.build.dir.classes}"/>
        </war>
    </target>

    <target name="all" depends="war">
    </target>

    <target name="clean" description="Clean classes dir and war file">
        <delete dir="${web.build.dir.classes}"/>
        <delete file="${war.file}"/>
    </target>
</project>